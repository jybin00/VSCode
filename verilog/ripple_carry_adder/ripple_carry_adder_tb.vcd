$date
	Wed Aug 14 15:25:32 2019
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module ripple_carry_adder_tb $end
$var wire 10 ! Sum [9:0] $end
$var wire 1 " C_out $end
$var reg 10 # A [9:0] $end
$var reg 10 $ B [9:0] $end
$var reg 1 % C_in $end
$scope module rca $end
$var wire 10 & A [9:0] $end
$var wire 10 ' B [9:0] $end
$var wire 1 % C_in $end
$var wire 10 ( Sum [9:0] $end
$var wire 1 " C_out_r $end
$var wire 9 ) C_out [8:0] $end
$scope module fa_0 $end
$var wire 1 * A $end
$var wire 1 + B $end
$var wire 1 % Cin $end
$var wire 1 , Cout $end
$var wire 1 - and_out $end
$var wire 1 . xor_out $end
$var wire 1 / half_out $end
$var wire 1 0 S $end
$scope module h0 $end
$var wire 1 . in0 $end
$var wire 1 % in1 $end
$var wire 1 0 out0 $end
$var wire 1 / out1 $end
$upscope $end
$upscope $end
$scope module fa_1 $end
$var wire 1 1 A $end
$var wire 1 2 B $end
$var wire 1 3 Cin $end
$var wire 1 4 Cout $end
$var wire 1 5 and_out $end
$var wire 1 6 xor_out $end
$var wire 1 7 half_out $end
$var wire 1 8 S $end
$scope module h0 $end
$var wire 1 6 in0 $end
$var wire 1 3 in1 $end
$var wire 1 8 out0 $end
$var wire 1 7 out1 $end
$upscope $end
$upscope $end
$scope module fa_2 $end
$var wire 1 9 A $end
$var wire 1 : B $end
$var wire 1 ; Cin $end
$var wire 1 < Cout $end
$var wire 1 = and_out $end
$var wire 1 > xor_out $end
$var wire 1 ? half_out $end
$var wire 1 @ S $end
$scope module h0 $end
$var wire 1 > in0 $end
$var wire 1 ; in1 $end
$var wire 1 @ out0 $end
$var wire 1 ? out1 $end
$upscope $end
$upscope $end
$scope module fa_3 $end
$var wire 1 A A $end
$var wire 1 B B $end
$var wire 1 C Cin $end
$var wire 1 D Cout $end
$var wire 1 E and_out $end
$var wire 1 F xor_out $end
$var wire 1 G half_out $end
$var wire 1 H S $end
$scope module h0 $end
$var wire 1 F in0 $end
$var wire 1 C in1 $end
$var wire 1 H out0 $end
$var wire 1 G out1 $end
$upscope $end
$upscope $end
$scope module fa_4 $end
$var wire 1 I A $end
$var wire 1 J B $end
$var wire 1 K Cin $end
$var wire 1 L Cout $end
$var wire 1 M and_out $end
$var wire 1 N xor_out $end
$var wire 1 O half_out $end
$var wire 1 P S $end
$scope module h0 $end
$var wire 1 N in0 $end
$var wire 1 K in1 $end
$var wire 1 P out0 $end
$var wire 1 O out1 $end
$upscope $end
$upscope $end
$scope module fa_5 $end
$var wire 1 Q A $end
$var wire 1 R B $end
$var wire 1 S Cin $end
$var wire 1 T Cout $end
$var wire 1 U and_out $end
$var wire 1 V xor_out $end
$var wire 1 W half_out $end
$var wire 1 X S $end
$scope module h0 $end
$var wire 1 V in0 $end
$var wire 1 S in1 $end
$var wire 1 X out0 $end
$var wire 1 W out1 $end
$upscope $end
$upscope $end
$scope module fa_6 $end
$var wire 1 Y A $end
$var wire 1 Z B $end
$var wire 1 [ Cin $end
$var wire 1 \ Cout $end
$var wire 1 ] and_out $end
$var wire 1 ^ xor_out $end
$var wire 1 _ half_out $end
$var wire 1 ` S $end
$scope module h0 $end
$var wire 1 ^ in0 $end
$var wire 1 [ in1 $end
$var wire 1 ` out0 $end
$var wire 1 _ out1 $end
$upscope $end
$upscope $end
$scope module fa_7 $end
$var wire 1 a A $end
$var wire 1 b B $end
$var wire 1 c Cin $end
$var wire 1 d Cout $end
$var wire 1 e and_out $end
$var wire 1 f xor_out $end
$var wire 1 g half_out $end
$var wire 1 h S $end
$scope module h0 $end
$var wire 1 f in0 $end
$var wire 1 c in1 $end
$var wire 1 h out0 $end
$var wire 1 g out1 $end
$upscope $end
$upscope $end
$scope module fa_8 $end
$var wire 1 i A $end
$var wire 1 j B $end
$var wire 1 k Cin $end
$var wire 1 l Cout $end
$var wire 1 m and_out $end
$var wire 1 n xor_out $end
$var wire 1 o half_out $end
$var wire 1 p S $end
$scope module h0 $end
$var wire 1 n in0 $end
$var wire 1 k in1 $end
$var wire 1 p out0 $end
$var wire 1 o out1 $end
$upscope $end
$upscope $end
$scope module fa_9 $end
$var wire 1 q A $end
$var wire 1 r B $end
$var wire 1 s Cin $end
$var wire 1 " Cout $end
$var wire 1 t and_out $end
$var wire 1 u xor_out $end
$var wire 1 v half_out $end
$var wire 1 w S $end
$scope module h0 $end
$var wire 1 u in0 $end
$var wire 1 s in1 $end
$var wire 1 w out0 $end
$var wire 1 v out1 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
0k
0j
0i
0h
0g
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
1X
0W
0V
0U
0T
1S
0R
0Q
1P
0O
0N
1M
1L
1K
1J
1I
0H
1G
1F
0E
1D
1C
1B
0A
0@
0?
0>
1=
1<
0;
1:
19
18
07
16
05
04
03
12
01
00
0/
0.
0-
0,
0+
0*
b11100 )
b110010 (
b11110 '
b10100 &
0%
b11110 $
b10100 #
0"
b110010 !
$end
#5
1?
1;
1`
14
1[
08
17
1C
1S
1T
13
0@
1<
0P
1O
1L
0X
1W
b111111 )
1,
1H
0G
1>
0=
1N
0M
1V
1-
0F
1E
b1001001 !
b1001001 (
10
1+
02
0:
0J
1R
1*
11
1A
1%
b101001 $
b101001 '
b11111 #
b11111 &
#10
